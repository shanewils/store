{"ast":null,"code":"import { PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS } from \"../constants/productConstants\";\nimport { PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS } from \"../constants/productConstants\";\nimport { PRODUCT_SAVE_FAIL, PRODUCT_SAVE_REQUEST, PRODUCT_SAVE_SUCCESS } from \"../constants/productConstants\";\nimport axios from 'axios';\nimport Axios from \"axios\";\n\nconst listProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"/api/products\");\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst saveProduct = product => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_SAVE_REQUEST,\n      payload: product\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await Axios.post('/api/products', product, {\n      headers: {\n        Authorization: 'Bearer ' + userInfo.token\n      }\n    });\n    dispatch({\n      type: PRODUCT_SAVE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_SAVE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst detailsProduct = productId => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST,\n      payload: productId\n    });\n    const {\n      data\n    } = await axios.get(\"/api/products/\" + productId);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { listProducts, detailsProduct, saveProduct };","map":{"version":3,"sources":["C:/Users/bktes/development/eshop/eshop/frontend/src/actions/productActions.js"],"names":["PRODUCT_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_SAVE_FAIL","PRODUCT_SAVE_REQUEST","PRODUCT_SAVE_SUCCESS","axios","Axios","listProducts","dispatch","type","data","get","payload","error","message","saveProduct","product","getState","userSignin","userInfo","post","headers","Authorization","token","detailsProduct","productId"],"mappings":"AAAA,SAASA,iBAAT,EAA4BC,oBAA5B,EAAkDC,oBAAlD,QAA8E,+BAA9E;AACA,SAASC,oBAAT,EAA+BC,uBAA/B,EAAwDC,uBAAxD,QAAuF,+BAAvF;AACA,SAASC,iBAAT,EAA4BC,oBAA5B,EAAkDC,oBAAlD,QAA8E,+BAA9E;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAY,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAC3C,MAAI;AAEAA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEZ;AAAR,KAAD,CAAR;AACA,UAAM;AAAEa,MAAAA;AAAF,QAAW,MAAML,KAAK,CAACM,GAAN,CAAU,eAAV,CAAvB;AACAH,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEX,oBAAR;AAA8Bc,MAAAA,OAAO,EAAEF;AAAvC,KAAD,CAAR;AACH,GALD,CAMA,OAAMG,KAAN,EAAY;AAERL,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEb,iBAAR;AAA2BgB,MAAAA,OAAO,EAAEC,KAAK,CAACC;AAA1C,KAAD,CAAR;AACH;AACJ,CAXD;;AAaA,MAAMC,WAAW,GAAIC,OAAD,IAAa,OAAOR,QAAP,EAAiBS,QAAjB,KAA8B;AAC3D,MAAI;AACFT,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEN,oBAAR;AAA8BS,MAAAA,OAAO,EAAEI;AAAvC,KAAD,CAAR;AACA,UAAM;AAACE,MAAAA,UAAU,EAAE;AAAEC,QAAAA;AAAF;AAAb,QAA8BF,QAAQ,EAA5C;AACA,UAAM;AAAEP,MAAAA;AAAF,QAAW,MAAMJ,KAAK,CAACc,IAAN,CAAW,eAAX,EAA4BJ,OAA5B,EAAqC;AACxDK,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAE,YAAYH,QAAQ,CAACI;AAD7B;AAD+C,KAArC,CAAvB;AAKEf,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL,oBAAR;AAA8BQ,MAAAA,OAAO,EAAEF;AAAvC,KAAD,CAAR;AACH,GATD,CASE,OAAOG,KAAP,EAAc;AACdL,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEP,iBAAR;AAA2BU,MAAAA,OAAO,EAAEC,KAAK,CAACC;AAA1C,KAAD,CAAR;AACD;AACF,CAbH;;AAeA,MAAMU,cAAc,GAAIC,SAAD,IAAe,MAAOjB,QAAP,IAAoB;AACtD,MAAI;AACAA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAET,uBAAR;AAAiCY,MAAAA,OAAO,EAAEa;AAA1C,KAAD,CAAR;AACA,UAAM;AAACf,MAAAA;AAAD,QAAS,MAAML,KAAK,CAACM,GAAN,CAAU,mBAAmBc,SAA7B,CAArB;AACAjB,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER,uBAAR;AAAiCW,MAAAA,OAAO,EAAEF;AAA1C,KAAD,CAAR;AACH,GAJD,CAKA,OAAMG,KAAN,EAAY;AAERL,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEV,oBAAR;AAA8Ba,MAAAA,OAAO,EAAEC,KAAK,CAACC;AAA7C,KAAD,CAAR;AACH;AACJ,CAVD;;AAYA,SAASP,YAAT,EAAuBiB,cAAvB,EAAuCT,WAAvC","sourcesContent":["import { PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS } from \"../constants/productConstants\";\r\nimport { PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS } from \"../constants/productConstants\";\r\nimport { PRODUCT_SAVE_FAIL, PRODUCT_SAVE_REQUEST, PRODUCT_SAVE_SUCCESS } from \"../constants/productConstants\";\r\n\r\nimport axios from 'axios';\r\nimport Axios from \"axios\";\r\n\r\nconst listProducts = () => async (dispatch) => {\r\n    try {\r\n        \r\n        dispatch({ type: PRODUCT_LIST_REQUEST });\r\n        const { data } = await axios.get(\"/api/products\");\r\n        dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\r\n    }\r\n    catch(error){\r\n\r\n        dispatch({ type: PRODUCT_LIST_FAIL, payload: error.message });\r\n    }\r\n}\r\n\r\nconst saveProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: PRODUCT_SAVE_REQUEST, payload: product });\r\n      const {userSignin: { userInfo } } = getState();\r\n      const { data } = await Axios.post('/api/products', product, {\r\n          headers: {\r\n            Authorization: 'Bearer ' + userInfo.token,\r\n          }\r\n        });\r\n        dispatch({ type: PRODUCT_SAVE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      dispatch({ type: PRODUCT_SAVE_FAIL, payload: error.message });\r\n    }\r\n  }\r\n\r\nconst detailsProduct = (productId) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST, payload: productId });\r\n        const {data} = await axios.get(\"/api/products/\" + productId);\r\n        dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\r\n    }\r\n    catch(error){\r\n\r\n        dispatch({ type: PRODUCT_DETAILS_FAIL, payload: error.message });\r\n    }\r\n}\r\n\r\nexport { listProducts, detailsProduct, saveProduct }"]},"metadata":{},"sourceType":"module"}