{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\bktes\\\\development\\\\eshop\\\\eshop\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import React,{useEffect}from'react';import{useDispatch,useSelector}from'react-redux';import{addToCart,removeFromCart}from'../actions/cartActions';import{Link}from'react-router-dom';function CartScreen(props){var cart=useSelector(function(state){return state.cart;});var cartItems=cart.cartItems;var productId=props.match.params.id;var qty=props.location.search?Number(props.location.search.split(\"=\")[1]):1;var dispatch=useDispatch();var removeFromCartHandler=function removeFromCartHandler(productId){dispatch(removeFromCart(productId));};useEffect(function(){if(productId){dispatch(addToCart(productId,qty));}},[dispatch,productId,qty]);var checkoutHandler=function checkoutHandler(){props.history.push(\"/signin?redirect=shipping\");};return/*#__PURE__*/React.createElement(\"div\",{className:\"cart\"},/*#__PURE__*/React.createElement(\"div\",{className:\"cart-list\"},/*#__PURE__*/React.createElement(\"ul\",{className:\"cart-list-container\"},/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"h3\",null,\"Shopping Cart\"),/*#__PURE__*/React.createElement(\"div\",null,\"Price\")),cartItems.lenght===0?/*#__PURE__*/React.createElement(\"div\",null,\"Cart is empty\"):cartItems.map(function(item){return/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"cart-image\"},/*#__PURE__*/React.createElement(\"img\",{src:item.image,alt:\"product\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"cart-name\"},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Link,{to:\"/product/\"+item.product},item.name)),/*#__PURE__*/React.createElement(\"div\",{className:\"cart-qty\"},\"Qty:\",/*#__PURE__*/React.createElement(\"select\",{value:item.qty,onChange:function onChange(e){return dispatch(addToCart(item.product,e.target.value));}},_toConsumableArray(Array(item.countInStock).keys()).map(function(x){return/*#__PURE__*/React.createElement(\"option\",{key:x+1,value:x+1},x+1);})),/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"button\",onClick:function onClick(){return removeFromCartHandler(item.product);}},\"Delete\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"cart-price\"},\"\\xA3\",item.price));}))),/*#__PURE__*/React.createElement(\"div\",{className:\"cart-action\"},/*#__PURE__*/React.createElement(\"h3\",null,\"Subtotal ( \",cartItems.reduce(function(a,c){return a+c.qty;},0),\" items) : \\xA3 \",cartItems.reduce(function(a,c){return a+c.price*c.qty;},0)),/*#__PURE__*/React.createElement(\"button\",{onClick:checkoutHandler,className:\"button-primary full-width\",disabled:cartItems.lenght===0},\"Proceed to Checkout\")));}export default CartScreen;","map":{"version":3,"sources":["C:/Users/bktes/development/eshop/eshop/frontend/src/Screens/CartScreen.js"],"names":["React","useEffect","useDispatch","useSelector","addToCart","removeFromCart","Link","CartScreen","props","cart","state","cartItems","productId","match","params","id","qty","location","search","Number","split","dispatch","removeFromCartHandler","checkoutHandler","history","push","lenght","map","item","image","product","name","e","target","value","Array","countInStock","keys","x","price","reduce","a","c"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addToCart, removeFromCart } from '../actions/cartActions';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction CartScreen (props) {\r\n\r\n    const cart = useSelector(state => state.cart);\r\n\r\n    const {cartItems} = cart;\r\n\r\n    const productId = props.match.params.id;\r\n    const qty = props.location.search? Number(props.location.search.split(\"=\")[1]) : 1;\r\n    const dispatch = useDispatch();\r\n\r\n    const removeFromCartHandler = (productId) => {\r\n        dispatch(removeFromCart(productId));\r\n    }\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addToCart(productId, qty));\r\n        }\r\n    }, [dispatch, productId, qty ]);\r\n\r\n    const checkoutHandler = () => {\r\n        props.history.push(\"/signin?redirect=shipping\");\r\n    }\r\n\r\n    return <div className=\"cart\">\r\n        <div className=\"cart-list\">\r\n            <ul className=\"cart-list-container\">\r\n                <li>\r\n                    <h3>\r\n                        Shopping Cart\r\n                    </h3>\r\n                    <div>\r\n                        Price\r\n                    </div>\r\n                </li>\r\n                {\r\n                    cartItems.lenght ===0 ?\r\n                    <div>\r\n                        Cart is empty\r\n                    </div>\r\n                    :\r\n                    cartItems.map( item =>\r\n                        <li>\r\n                            <div className=\"cart-image\">\r\n                                <img src={item.image} alt=\"product\" />\r\n                            </div>\r\n                            <div className=\"cart-name\">\r\n                                <div>\r\n                                    <Link to={\"/product/\" + item.product}>\r\n                                        {item.name}  \r\n                                    </Link>\r\n                                </div>\r\n                                <div className=\"cart-qty\">\r\n                                    Qty:\r\n                                    <select value={item.qty} onChange={(e) => dispatch(addToCart(item.product, e.target.value))}>\r\n                                        {[...Array(item.countInStock).keys()].map(x =>\r\n                                            <option key={x + 1} value={x + 1}>{x + 1}</option>\r\n                                        )}\r\n                                    </select>\r\n                                    <button type=\"button\" className=\"button\" onClick={() => removeFromCartHandler(item.product)}>\r\n                                        Delete\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"cart-price\">\r\n                                £{item.price}\r\n                            </div>\r\n                        </li>\r\n                    )\r\n                }\r\n            </ul>\r\n\r\n\r\n        </div>\r\n        <div className=\"cart-action\">\r\n        <h3>\r\n            Subtotal ( {cartItems.reduce((a, c) => a + c.qty, 0)} items)\r\n            :\r\n            £ {cartItems.reduce((a, c) => a + c.price * c.qty, 0)}\r\n        </h3>\r\n            <button onClick={checkoutHandler} className=\"button-primary full-width\" disabled={cartItems.lenght === 0}>\r\n                Proceed to Checkout\r\n            </button>\r\n            \r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default CartScreen;"]},"metadata":{},"sourceType":"module"}