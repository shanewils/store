{"ast":null,"code":"import { PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS } from \"../constants/productConstants\";\nimport { PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS } from \"../constants/productConstants\";\nimport { PRODUCT_SAVE_FAIL, PRODUCT_SAVE_REQUEST, PRODUCT_SAVE_SUCCESS } from \"../constants/productConstants\";\nimport Axios from \"axios\";\n\nconst listProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"/api/products\");\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst saveProduct = product => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_SAVE_REQUEST,\n      payload: product\n    });\n    const {\n      userSignIn: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await Axios.post('/api/products', product, {\n      headers: {\n        'Authorization': 'Bearer ' + userInfo.token\n      }\n    });\n    dispatch({\n      type: PRODUCT_SAVE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_SAVE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst detailsProduct = productId => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST,\n      payload: productId\n    });\n    const {\n      data\n    } = await axios.get(\"/api/products/\" + productId);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { listProducts, detailsProduct, saveProduct };","map":{"version":3,"sources":["C:/Users/bktes/development/eshop/eshop/frontend/src/actions/productActions.js"],"names":["PRODUCT_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_SAVE_FAIL","PRODUCT_SAVE_REQUEST","PRODUCT_SAVE_SUCCESS","Axios","listProducts","dispatch","type","data","axios","get","payload","error","message","saveProduct","product","getState","userSignIn","userInfo","post","headers","token","detailsProduct","productId"],"mappings":"AAAA,SAASA,iBAAT,EAA4BC,oBAA5B,EAAkDC,oBAAlD,QAA8E,+BAA9E;AACA,SAASC,oBAAT,EAA+BC,uBAA/B,EAAwDC,uBAAxD,QAAuF,+BAAvF;AACA,SAASC,iBAAT,EAA4BC,oBAA5B,EAAkDC,oBAAlD,QAA8E,+BAA9E;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAY,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAC3C,MAAI;AAEAA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEX;AAAR,KAAD,CAAR;AACA,UAAM;AAAEY,MAAAA;AAAF,QAAW,MAAMC,KAAK,CAACC,GAAN,CAAU,eAAV,CAAvB;AACAJ,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEV,oBAAR;AAA8Bc,MAAAA,OAAO,EAAEH;AAAvC,KAAD,CAAR;AACH,GALD,CAMA,OAAMI,KAAN,EAAY;AAERN,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEZ,iBAAR;AAA2BgB,MAAAA,OAAO,EAAEC,KAAK,CAACC;AAA1C,KAAD,CAAR;AACH;AACJ,CAXD;;AAaA,MAAMC,WAAW,GAAIC,OAAD,IAAa,OAAOT,QAAP,EAAiBU,QAAjB,KAA8B;AAC3D,MAAI;AACAV,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEL,oBAAP;AAA6BS,MAAAA,OAAO,EAAEI;AAAtC,KAAD,CAAR;AACA,UAAM;AAAEE,MAAAA,UAAU,EAAC;AAAEC,QAAAA;AAAF;AAAb,QAA8BF,QAAQ,EAA5C;AACA,UAAM;AAAER,MAAAA;AAAF,QAAW,MAAMJ,KAAK,CAACe,IAAN,CAAW,eAAX,EAA4BJ,OAA5B,EAAqC;AACxDK,MAAAA,OAAO,EAAE;AACL,yBAAiB,YAAYF,QAAQ,CAACG;AADjC;AAD+C,KAArC,CAAvB;AAKAf,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEJ,oBAAR;AAA8BQ,MAAAA,OAAO,EAAEH;AAAvC,KAAD,CAAR;AAEH,GAVD,CAUE,OAAOI,KAAP,EAAc;AACZN,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEN,iBAAR;AAA2BU,MAAAA,OAAO,EAAEC,KAAK,CAACC;AAA1C,KAAD,CAAR;AACH;AACJ,CAdD;;AAgBA,MAAMS,cAAc,GAAIC,SAAD,IAAe,MAAOjB,QAAP,IAAoB;AACtD,MAAI;AACAA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER,uBAAR;AAAiCY,MAAAA,OAAO,EAAEY;AAA1C,KAAD,CAAR;AACA,UAAM;AAACf,MAAAA;AAAD,QAAS,MAAMC,KAAK,CAACC,GAAN,CAAU,mBAAmBa,SAA7B,CAArB;AACAjB,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEP,uBAAR;AAAiCW,MAAAA,OAAO,EAAEH;AAA1C,KAAD,CAAR;AACH,GAJD,CAKA,OAAMI,KAAN,EAAY;AAERN,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAET,oBAAR;AAA8Ba,MAAAA,OAAO,EAAEC,KAAK,CAACC;AAA7C,KAAD,CAAR;AACH;AACJ,CAVD;;AAYA,SAASR,YAAT,EAAuBiB,cAAvB,EAAuCR,WAAvC","sourcesContent":["import { PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS } from \"../constants/productConstants\";\r\nimport { PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS } from \"../constants/productConstants\";\r\nimport { PRODUCT_SAVE_FAIL, PRODUCT_SAVE_REQUEST, PRODUCT_SAVE_SUCCESS } from \"../constants/productConstants\";\r\n\r\nimport Axios from \"axios\";\r\n\r\nconst listProducts = () => async (dispatch) => {\r\n    try {\r\n        \r\n        dispatch({ type: PRODUCT_LIST_REQUEST });\r\n        const { data } = await axios.get(\"/api/products\");\r\n        dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\r\n    }\r\n    catch(error){\r\n\r\n        dispatch({ type: PRODUCT_LIST_FAIL, payload: error.message });\r\n    }\r\n}\r\n\r\nconst saveProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({type: PRODUCT_SAVE_REQUEST, payload: product });\r\n        const { userSignIn:{ userInfo } } = getState();\r\n        const { data } = await Axios.post('/api/products', product, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + userInfo.token\r\n            }\r\n        });\r\n        dispatch({ type: PRODUCT_SAVE_SUCCESS, payload: data });\r\n\r\n    } catch (error) {\r\n        dispatch({ type: PRODUCT_SAVE_FAIL, payload: error.message });\r\n    }\r\n}\r\n\r\nconst detailsProduct = (productId) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST, payload: productId });\r\n        const {data} = await axios.get(\"/api/products/\" + productId);\r\n        dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\r\n    }\r\n    catch(error){\r\n\r\n        dispatch({ type: PRODUCT_DETAILS_FAIL, payload: error.message });\r\n    }\r\n}\r\n\r\nexport { listProducts, detailsProduct, saveProduct }"]},"metadata":{},"sourceType":"module"}